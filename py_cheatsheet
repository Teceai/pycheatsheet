type(var)

# Without packages this stuff works this way (with numbers that will work the same way, without numpy for ex.)
In: 'ab' + 'cd'
Out: 'abcd'

# That's how you mix string with integers or floats
savings = 100
result = 100 * 1.10 ** 7
print("I started with $" + str(savings) + " and now have $" + str(result) + ". Awesome!")

# string methods
.upper()
.count()

# list methods
.index()
.count()
.append()
.reverse()
.remove()

# Install package and import it for work
python3 get-pip.py 
pip3 install numpy
import numpy as np
from numpy import array

# numpy package
import numpy as np
np.array() 
np.array(array[array with some condition])
np.corrcoef()

#attribute of np.array
.shape()

### PLOTS ###

import matplotlib.pyplot as plt
plt.plot(x,y)
plt.scatter(x,y)
plt.hist(x, bins=n)
plt.show()
#cleans it up again so you can start afresh
plt.clf()
# Put the x-axis on a logarithmic scale
plt.xscale('log')

# customize plot
# Basic scatter plot, log scale
plt.scatter(x = gdp_cap, y = life_exp, s = np.array(pop) * 2, c = col, alpha = 0.8)
plt.xscale('log') 
# Strings
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.title('World Development in 2007')
plt.xticks([1000, 10000, 100000],['1k', '10k', '100k'])
plt.text(1550, 71, 'India')
plt.grid(True)
# After customizing, display the plot
plt.show()

### DICTIONARIES ###


